#!/system/bin/sh

# Define temporary working directory and payload-related paths
TRICKY_DIR="/data/adb/tricky_store"
TMP_REMOTE="$TRICKY_DIR/remote_keybox.tmp"
KEYBOX_BASE64_PAYLOAD="UEQ5NGJXd2dkbVZ5YzJsdmJqMGlNUzR3SWo4KwpQRUZ1WkhKdmFXUkJkSFJsYzNSaGRHbHZiajQ9ClBFNTFiV0psY2s5bVMyVjVZbTk0WlhNK01Ud3ZUblZ0WW1WeVQyWkxaWGxpYjNobGN6ND0KUEV0bGVXSnZlQ0JFWlhacFkyVkpSRDBpUUZCc1lYUmZUQ0krClBFdGxlU0JoYkdkdmNtbDBhRzA5SW1WalpITmhJajQ9ClBGQnlhWFpoZEdWTFpYa2dabTl5YldGMFBTSndaVzBpUGc9PQpMUzB0TFMxQ1JVZEpUaUJGUXlCUVVrbFdRVlJGSUV0RldTMHRMUzB0ClBDRXRMV2gwZEhCek9pOHZkQzV0WlM5d2JHRjBYMHd0TFQ0PQpUVWhqUTBGUlJVVkpRa2x1VmlzM2JsaHNPRVZwVFdKNE1sa3dSMUZHWWxCU1UyVXJUMmd6ZGpnNWQyZHhZMnRUUlU0eGMyOUJiMGREUTNGSFUwMDBPUT09ClFYZEZTRzlWVVVSUlowRkZVSGxRWkc1TlltdDRaREF4YzNWS1ZrUjNhSEJIWVhkS1VFdFlZUzlXYzJoUVp6TlllVk42WVd0V1VUWTFVRTFXUlhWSEx3PT0KY2taMk1uRlJkbFV2ZUN0MFlYZFFNemx4UkZaRWF6TkJXV01yVnpGb1psbEhaejA5CkxTMHRMUzFGVGtRZ1JVTWdVRkpKVmtGVVJTQkxSVmt0TFMwdExRPT0KUENFdExXaDBkSEJ6T2k4dmRDNXRaUzl3YkdGMFgwd3RMVDQ9ClBDOVFjbWwyWVhSbFMyVjVQZz09ClBFTmxjblJwWm1sallYUmxRMmhoYVc0KwpQRTUxYldKbGNrOW1RMlZ5ZEdsbWFXTmhkR1Z6UGpNOEwwNTFiV0psY2s5bVEyVnlkR2xtYVdOaGRHVnpQZz09ClBFTmxjblJwWm1sallYUmxJR1p2Y20xaGREMGljR1Z0SWo0PQpMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHQKUENFdExXaDBkSEJ6T2k4dmRDNXRaUzl3YkdGMFgwd3RMVDQ9ClRVbEpRamhxUTBOQldHMW5RWGRKUWtGblNWRlBUWEl3UVhkNFMwbEVXWFpITldWVFRsVkJlbFJVUVV0Q1oyZHhhR3RxVDFCUlVVUkJha0UxVFZGM2R3PT0KUTJkWlJGWlJVVTFFUVU1VlVsVlZlRXRVUVc1Q1owNVdRa0ZWVkVsSFZYZFplazB4VGtSb2FFNUVaR3hPZWs1dFRXMUZNMDVYV21sUFYxWnJUbTFTYUE9PQpUbGRLYlUweVZUUk5RalJZUkZSSmQwMUVhM2xQUkVsM1RWUnJNRTVXYjFoRVZFMTNUVVJyZVU1cVNYZE5WR3N3VGxadmQwOVVSVTFOUVc5SFFURlZSUT09ClJFRjNSRlpGVmtaTlUydDNTbmRaUkZaUlVVWkZlVUUwV1ZkWk5Ga3lSbWhPUjFKb1RsUlJlVTU2V1RCWlYxVXhUVzFOTVU1dFNUSk5hbXMxVG1wb2FRPT0KVG1wQ1drMUNUVWRDZVhGSFUwMDBPVUZuUlVkRFEzRkhVMDAwT1VGM1JVaEJNRWxCUWtRNGFqTmFla2MxVFZoa1RtSk1hVlpST0VsaFVtMXpRMVI1YkE9PQpNbll4WWtsVU5FNHhPR3R6TW5CR1ZVOTFWSHBHVWt4b2RqWjRZamx4YTB3eFVEaG1jbGR6UkRrdllXY3hVVFZPZDBkSVVHeDBXVmd5UW5GcVdYcENhQT09ClRVSXdSMEV4VldSRVoxRlhRa0pSYVdWaFdXZEhjVUZ3YVZwWlVDdDVjbnBPVVZacVIyb3dOWEJFUVdaQ1owNVdTRk5OUlVkRVFWZG5RbFJEVlhkSGRRPT0KVUcxTlFuSXZTMnh1VGxabVowcFRUMEZFU2s5UVJFRlFRbWRPVmtoU1RVSkJaamhGUWxSQlJFRlJTQzlOUVRSSFFURlZaRVIzUlVJdmQxRkZRWGRKUXc9PQpRa1JCUzBKblozRm9hMnBQVUZGUlJFRm5UbTVCUkVKclFXcEJUMHcwYnpaSFpGWkpkMmx6WVd0NGFFdzFibTU0U1VZNVdtd3hiME55WkROS1RESjFUZz09CllqaEdURlpzYm5veGNrbDVUMWRoVjFSeVpGUnRhVkJxUlZVMFEwMUNjSFFyY2xWeFlYUXdla0paUmtJd2QwczBhM05KTDI5NFYwZHRiV1ZVTm1keFdnPT0KYTA1M2VGSkpXSFlyWVdJd1IycGFlbUpwYVVsUFkzbDNWVTUwU1RablBUMD0KTFMwdExTMUZUa1FnUTBWU1ZFbEdTVU5CVkVVdExTMHRMUT09ClBDOURaWEowYVdacFkyRjBaVDQ9ClBFTmxjblJwWm1sallYUmxJR1p2Y20xaGREMGljR1Z0SWo0PQpMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHQKUENFdExXaDBkSEJ6T2k4dmRDNXRaUzl3YkdGMFgwd3RMVDQ9ClRVbEpSR3Q2UTBOQldIVm5RWGRKUWtGblNWRkdheTk0WW1KUFN6QjZNRnBDUmprNWQzZDRMM3BFUVU1Q1oydHhhR3RwUnpsM01FSkJVWE5HUVVSQllnPT0KVFZKcmQwWjNXVVJXVVZGR1JYaENiVTlVU1hkTlJHeHNUMFJWZWxscVdtbE5SRkV4VFVJMFdFUlVTWGROUkd0NVQwUkpkMDFVWXpCUFZtOVlSRlJOZHc9PQpUVVJyZVU1cVNYZE5WR013VDFadmQwOVVSVTFOUVc5SFFURlZSVVJCZDBSV1JWWkdUVk5yZDBwM1dVUldVVkZHUlhsQ2JFMUhUWHBPVkZFMFdWUlJNdz09CldsUmplbHBxU21oT2VsWnRXV3BzYkZwRVdtdFpWRlpwV21wT2JFOUVRakpOUWtGSFFubHhSMU5OTkRsQlowVkhRbE4xUWtKQlFXbEJNa2xCUWtwSWVnPT0KTUhWVk0ydGlZVTFxWmxaT016aEhXRVJuU1VKTWJEUkhjRGRRTlRsdU5pdDZiWEZ2YzNkdlFuSmljbk5EYVVaUFYxVlZLMEk1TVRoR2JrVldZMWM0Tmc9PQphbTlNVXl0WmMyNDNiWE5oYTNaeVNHRnVTazFLTkhaRWQwUTNMM0FyUmpadWExRTVTamsxUmtWcmRYRTNNVzlIVkhwRGNuTTJVMnhEU0hVMVdIRk9hZz09ClRVZEZkMGhSV1VSV1VqQlBRa0paUlVaTlNsUkJZVFFyV1hkSGRqaHhWMk14Vml0QmJFazBRVTFyTkRoTlFqaEhRVEZWWkVsM1VWbE5RbUZCUmtSYWFBPT0KTkZGQ09HbEJWVXBWV1hSRllrVm1MMGRyZWtvMmF6aFRUVUU0UjBFeFZXUkZkMFZDTDNkUlJrMUJUVUpCWmpoM1JHZFpSRlpTTUZCQlVVZ3ZRa0ZSUkE9PQpRV2RKUlUxQk1FZERVM0ZIVTBsaU0wUlJSVUpEZDFWQlFUUkpRMEZSUVc1UE5VdE9jbUpsYmxOWmVFbFBabnA0U0RRM1EwNXBNMUY2TWs4MUswWnZVQT09ClZ6ZHpkazVxWjJkbkwyaGFiM1JUZDJKa1pIQlRWbUVyWm1SUldWbFpXbVJJVFZCT2FsRkxXRmxoUkhoUVVFTXlhUzg0UzBKb2MyTnhLMVJYTVdzNVdRPT0KUzFBcmNVNUhUVm95UTB0NlVrbFVNSEJDZVV3d1RUVk1VVTVpU0RaV2VFRjJla2RzWVVOMlZFOUpjMFJ0YkV4NWFucHRWRGxSVFhScVYydHRURXRrZFE9PQpTVk5QWVRjeWFFZE5UVFJyUTJOSlVrdGpaM054TDNNd01IZG9jMDlLTmtsVU1qZHNjRGcxUVVGVWRVdzVUblpPUlN0clF6RlVXamsyZWtWelVqaFBjQT09CmJIVnlOR1YxUW0xR2IwZDZiWFJUUm5OYVlUbFVUbmxqTmpoU2RVb3JiaTlpV1RkcFNUYzNkMWhWZWpkRlVqWjFhaTl6Wm01eWFsbEtSbU5zVEdwSmFnPT0KYlRoTmNYQTJPVWxhTVc1aVNuTkxWR2RuTUdVMVdEUjRaV1ZqVGxCTVUwMXdMMmhIY1VSUGRrNXVVMVppY0hKcE5rUnFiVEJhVjBsTWF6WTFRbVZTZUE9PQpRVTVFVldoSlEyY3ZhWFZZYm1KVFRFbG5VRUZKZUhOdGJtbFVWalF4Ym01SlVUSnVkMFI0Vm5SbVUzUnpVSHBUVjJWRlMydE5WR1YwWVN0TWRUaHFTdz09ClMxWkVZMUpVZERKNmIwZDRLMHBQVVZkaFJWZHdUMVJWVFM5NFduZHVTbUZ0WkVoelMwSlhjM05yVVdoR1RYaE1TVkJLWWsxbFdVRmxRME56ZDBSVVJRPT0KSzB4UmRqTXhkMFJVZUZOeVJsWjNMMlpqWmxaWk5sQlRVbHBYYjNrck5sRXZla1l6U2tGVWQxRnVXWGhPVldOb1drYzBjM1YxZVM5UFRsQmlUMmhFTUE9PQpWbVI2YW10VGVYcGhObVp2YlZSM01rWXhSek5qTkdwVFVVbHBUbFl6VDBsNGMzaG9OR3BoTVhOelNuRk5VSFZSZWxKalIwZFllRmc0ZVZGSWNtY3JkQT09CkswUjRiak15YWtaV2FHdzFZbmhVWlV0MVNUWnRWMEpaVFNzdmNVVkNWRUpGV0V4T1UyMVdaSGh5Ym5SR1lWQnRhVkZqWjNWQ1UwWlNNVzlJV25scEx3PT0KZUZNdmFtSlpSbHBGVVQwOQpMUzB0TFMxRlRrUWdRMFZTVkVsR1NVTkJWRVV0TFMwdExRPT0KUEM5RFpYSjBhV1pwWTJGMFpUND0KSUNBZ0lDQWdJQ0E4UTJWeWRHbG1hV05oZEdVZ1ptOXliV0YwUFNKd1pXMGlQZz09CkxTMHRMUzFDUlVkSlRpQkRSVkpVU1VaSlEwRlVSUzB0TFMwdApUVWxKUmtoRVEwTkJkMU5uUVhkSlFrRm5TVXBCVGxWUU9HeDFhamgwWVhwTlFUQkhRMU54UjFOSllqTkVVVVZDUTNkVlFVMUNjM2hIVkVGWVFtZE9WZz09ClFrRlZWRVZIV1RWTmFrRjNUMWRWTkU1VVRtbE9iVWwzVGtSVmQwaG9ZMDVOVkd0NFRWUkplVTFxUVhwT2VsVTBWMmhqVGsxNlVYaE5WRVUwVFdwQmVnPT0KVG5wVk5GZHFRV0pOVW10M1JuZFpSRlpSVVVaRmVFSnRUMVJKZDAxRWJHeFBSRlY2V1dwYWFVMUVVVEZOU1VsRFNXcEJUa0puYTNGb2EybEhPWGN3UWc9PQpRVkZGUmtGQlQwTkJaemhCVFVsSlEwTm5TME5CWjBWQmNqZGlTR2RwZFhod2QwaHpTemRSZFdrNGVGVkdiVTl5TnpWbmRrMXpaQzlrVkVWRVJFcGtVdz09ClUzaDBaalpCYmpkNGVYRndVbEk1TUZCTU1tRmllRTB4WkVWeGJGaHVaakowY1hjeFRtVTBXSGRzTldwc1VtWmtia3BNYlU0d2NGUjVMelJzYWpRdk53PT0KZEhZd1Uyc3phV2xMYTNsd2JrVlZkRkkyVjJaTlowZ3dVVnBtUzBoTk1TdGthU3Q1T1ZSR1VuUjJObmt2THpCeVlpdFVLMWM0WVRsdWMwNU1MMmRuYWc9PQpibUZ5T0RZME5qRnhUekJ5VDNNeVkxaHFjRE5yVDBjeFJrVktOVTFXYlVadFFrZDBibkpMY0dFM00xaHdXSGxVY1ZKNFFpOU5NRzR4Ymk5WE9XNUhjUT09ClF6UkdVMWxoTURSVU5rNDFVa2xhUjBKT01ub3lUVlExU1V0SFlrWnNZa000VlhKWE1FUjRWemRCV1VsdFVWRmpTSFJIYkM5dE1EQlJURlpYZFhSSVVRPT0KYjFaS1dXNUdVR3hZVkdOSVdYWkJVMHgxSzFKb2FITmlSRzE0VFdkS1NqQnRZMFJ3ZG5ORE5GQnFka0lyVkhoNWQwVnNaMU0zTUhaRk1GaHRURVFyVHc9PQpTblIyYzBKemJFaGFkbEJDUzBOUFpGUXdUVk1yZEdkVFQwbG1aMkVyZWpGYU1XYzNLMFJXWVdkbU4zRjFkbTFoWnpocVpsQnBiM2xMZG5odVN5OUZadz09CmMxUlZWbWt5WjJoNmNUaDNiVEkzZFdRdmJVbE5OMEZaTW5GRlQxSlNPRWR2TTFSV1FqUkllbGRSWjNCYWNuUXphVFZOU1d4RFlWazFNRFJNZWxOU2FRPT0KYVdkSVEzcEJVR3hJZDNNclZ6QnlRalZPSzJWeU5TOHljRXBMYm1aQ1UwUnBRMmxHUVZaMFEweFBXamRuVEdsTmJUQnFhRTh5UWpaMFZWaElTUzhyVFE9PQpVbEJxZVRBeWFUVTViRWxPVFZKU1pYWTFOa2RMZEdOa09YRlBMekJyVlVwWFpGcFVaRUV5V0c5VE9ESnBlRkIyV25SWVVYQlZjSFZNTVRKaFlpczVSUT09CllVUkxPRm8wVWtoS1dWbG1RMVF6VVRWMlRrRllZV2xYVVNzNFVGUlhiVEpSWjBKU0wySnJkMU5YWXl0T2NGVkdaMDVRVGpsUWRsRnBPRmRGWnpWVmJRPT0KUVVkTlEwRjNSVUZCWVU1cVRVZEZkMGhSV1VSV1VqQlBRa0paUlVaRVdtZzBVVUk0YVVGVlNsVlpkRVZpUldZdlIydDZTalpyT0ZOTlFqaEhRVEZWWkE9PQpTWGRSV1UxQ1lVRkdSRnBvTkZGQ09HbEJWVXBWV1hSRllrVm1MMGRyZWtvMmF6aFRUVUU0UjBFeFZXUkZkMFZDTDNkUlJrMUJUVUpCWmpoM1JHZFpSQT09ClZsSXdVRUZSU0M5Q1FWRkVRV2RKUlUxQk1FZERVM0ZIVTBsaU0wUlJSVUpEZDFWQlFUUkpRMEZSUWs5TllVSmpPRzkxYlZoaU1uWnZZemRZUTFkdWRRPT0KV0V0b1FrSkxNMlV5UzAxSGVqTTVkRGRzUVROWVdGSmxNbHBNVEVGclRFMDFlVE5LTjNSVlVtdG1OV0V4VTNWMFptUlBlVmhCYldWRk5sTlNiemd6VlE9PQphRFpYYzNwdlpHMU5hM2hMTlVkTk5FcEhjbTUwTkhCQ2FYTjFOV2xuV0VWNVpHRlhOM0Z4TWtOa1F6WkVUMGRxUnl0dFJXdE9PQzlVUVRad00yTnVidz09ClRDOXpVSGw2Tm1WMlpHcE1iRk5sU2poeVJrSklObmhYZVVsYVEySnlZM0JaUlVwNldHRlZUMFZoZUhoWWVHZFplalV2WTFScFZrdE9NazB4UnpKdmF3PT0KVVVKVlNWbFRXVFppYWtWTU5HRlZUalZqWm04M2IyZFFNMVYyYkdsRmJ6TkZiekJaWjNkMWVsSXlkakJMVWpaRE1XTmFjVnBLVTFSdVoyaEpReTkyUVE9PQpSRE15UzJST1VTdGpNMDRyZG13eVQxUnpWVlpOUXpGSGFWZHJibWRPZURGUFR6RXJhMWhYSzFsVWJtNVVWVTkwVDBsemQxVlFMMVp4WkRWVFdXZEJTUT09CmJVMUJabGs0VlRrdmFVbG5hMUZxTmxReVZ6WkdjMU5qZVRrMFNVNDVaa1pvUlRGVmRIcHRURzlDU1hWVlJuTldXRXBOVkhvclNuVmpkR2dyU1hGdlZ3PT0KUm5WaE9YWXhVamt6TDJzNU9IQTBNWEJxZEVaWUswZzRSSE5zVm1kbVVEQTVOM1pxZFRSTFJHeHhUalkwZUZZeFozSjNNMXBNYkRSRGFVOWxMMEU1TVE9PQpiMlZNYlRKVlNFOXhObmR1TTJWelFqUnlNa1ZKVVV0aU5tcFVWa2QxTlhOWlEyTmtWM0JZY2pCQlZWWnhZMEZDVUdSblRDdElOM0ZLWjNWQ2R6QTVidz09CmFtMDJlRTVKY25jeVQyOWpja1JMYzNWa2F5OXZhM0l2UVhkeFJYbFFTM2M1VjI1TmJGRm5URWxMZHpGeVQwUkhNazUyVlRsdlVqTkhWa2RrVFd0VlFnPT0KV25WMFREaFdkVVpyUlZKUlIzUTJkbEV5VDBOM01ITldORGRXVFd0MVdXSmhZMHN2ZUhsYVJtbFNZM0pRU2xCaU5ERjZaMkpSYWpsWVFVVjVURXREU0E9PQpaWGd3VTJSRWNuZ3JkRmRWUkhGSE9FRjBNa3BJUVQwOQpMUzB0TFMxRlRrUWdRMFZTVkVsR1NVTkJWRVV0TFMwdExRPT0KUEM5RFpYSjBhV1pwWTJGMFpUND0KUEM5RFpYSjBhV1pwWTJGMFpVTm9ZV2x1UGc9PQpQQzlMWlhrKwpQRXRsZVNCaGJHZHZjbWwwYUcwOUluSnpZU0krClBGQnlhWFpoZEdWTFpYa2dabTl5YldGMFBTSndaVzBpUGc9PQpMUzB0TFMxQ1JVZEpUaUJTVTBFZ1VGSkpWa0ZVUlNCTFJWa3RMUzB0TFE9PQpQQ0V0TFdoMGRIQnpPaTh2ZEM1dFpTOXdiR0YwWDB3dExUND0KVFVsSlJ6VlJTVUpCUVV0RFFWbEZRVFJOUjFGME5VRnRRbU5RVkVFck9IUlNURFIzTWxsWVMxSkpWa0kyYTBneVExQmtSRk5YU0RkbmJXTlBibXAxVHc9PQpXblJEWlZwQmVrRXpRbkk1T1ZKcGRWY3liVlIzYVcxVFpEUjFTVmhqUlU1TFNsVkJZemhNY0hGVFJGUmhVV05HTm5WbmVEWm9TMlZRYVZOclIycEpiUT09CmIzcFFXVU5YY21OeVpHZzNPRWRSTjB4WU5TOUdObE1yZFVZMFUzbHJObWcxVEU1WlExcDRRM1Y0UTBWTmNVUkJkVVZ0Y2s5TGNsTTFVbXhCWVRWTlp3PT0KU1RoMWFVaFJTMEZpUTNoRGFXeEtXbU01YkhBMUswVTBSVEp3VDBFNFJ6Rm1iWFZCVFhoRVZtTjFSVEZ4WW14c09HaHBOSHB3WkdSSU1GZHVaMFkxVUE9PQpNazVzVlRKUE16aEVNemhrWm5SWFJteFdZa3BTV0VoWVdIUnFOa295UWtaTk5XMDJTREZYUlRkSFlpdERjRTR3ZUdGeWF6ZEJTMFptYkhGeFpXeFdOQT09CmEyUktibTByVkdNNVdHcG5VMHBvTVZrd2NXbFliVWg2WVVndlduTnpjMGhIT0dSV0t5OTRZMk16TmtJclpWTldXV0puVFZabU5GQkRXU3RJUWpCc2FRPT0KYTBOT1pra3liU3RUUkdVMGFqTXJhakpZU1hGa1FtMHZlbUpSZVZaR1UxSkhhbGhYVkhNclZrMXJka0k0TjJacFVVZHZUa2RWU0VoUlNVcFhNMm9yTlE9PQpkbVJYVGs1c1FYb3hjM2d2UTI1ek5IY3ZZV2gzVlU1TE1GTlFkMmh0WVM5d1RWcFRVR0ZTYmpaU2MySXdVMEo0TDFsbVFtTkZjSGhtVkcxc01HUTBNdz09CmNtODFSMFZEUkU5c2F6aEVOVUZ6YkVGblRVSkJRVVZEWjJkSFFrRk9RelZOWlc5dGVHZHFTV2xQYVRSaU4xQk9Xa3BST1hWVkwxVTJVbVpvTVdSclVnPT0KZERjd2IySXlaakI1VWtOT1oyNTBZemxvY3pNNVRYSjZhbXBFVm10UFdqTnlOalkyTmt4b05FeHNXRk1yUzA1a1lrdFJWWFZQV2tkQk9EaG1jRXBGTkE9PQpkbFpKUW5CRk9WWjFPR2hSUm5FeWRHTmpNbVJJWml0alkyTXdXR0ZDVjJoNVpXeDBTakpyVldoRFN6UjZORkZUVVZsdU4xRmpWbnBYZWtkb1RrSm9kdz09Ck5HSXJiMlJHTkhGRGVtUmlNVXBqY0daM01uUjVlRWR4VFUxc1FVaExOa2hySzBONGRWWXZaV013UkhRelpIcG1aa3BxZGpSNWJtbHNMMFpqY1ZvMFp3PT0KT0RBNU5FcG9WSEZ1VG0xTWRrWTVTSGhhU1VoM1VFOXlUM1p6VlRCc1IyVlhTa1o2WWxNdmQwWjFUbWhuWTFkaFNrMDNlWE5pVXpZNUt6RkRVR1pSUXc9PQpiM3BtUVZGcVNVOHJTVzFIVFdoR1VrNWFWQzl4VUZacWQzTTVUV04xZDFWUmF6aE9SVlJEWTNKRE1GRXhibGxSVW5OdFNEUkpTek5RT1U1VGVqbGxNdz09CmFXSm1VMGN5Vm1SMmNIVnFTVlo0VW1aQllWSlRUR0prYWk4dk0wMXZNak5RYUc5NEswbDFMM2wzYTBJMVQzRnVTMUZVUW1KRlMxSmpRM1pZVUZRNGJ3PT0KVkdwNU5uZHpja3hpVEc5SVFtWkhjMkZQYkdWTE1UWm9iMWR5TkZKUGJWcHhka1JCZVhCUlVFMVdXVEpYYTA5d2RXY3lWRTlQWmsxNFZsWjBUbTh6ZFE9PQpWMkZWYm5wRlRFbEdSR2xwVWtWalJFMDRUa1ZZVFZKeFZqUldTR0ZSUzBKM1VVUTJjMlpqUmxBM1ZFSjFOMVp3YUdKblMxZG9ia2c1UTNsRldHSk9aQT09ClJFdEZOak4wYVZGRlpuVndabWRGYjB4dmJYSktlWE0yYmpoUFJXaE9Ra0ZxTjFBd1JFOVZPV0ozUm5sa1JYbHpLMnRoYVVkQk9IVkthV2MzTVdRNGJRPT0KT0RJd09FSkxablpJVTIwNU5HOUhVVGhOY1dGc05VNW1NRWdyYVcxdWVqVnRSekZpVFc1NmNFZG5TMVU1VG0xaFlXZHRVR0k1YVdjMVIyMXJXblZFUVE9PQphWE0yUjJ0VkswUmFSMlpFWVdWbU9YSXhUMUozWjFCQlkzUkJWVVJJTlZwalowSkZOU3RMTURWQmVraHFhVEZZYW05VlltSTBUVUZ5ZGl0WVNrVjJlQT09ClYxVjVUSFJWYkdSQlNYSXJNakJSYkdodlVuQktWVmc0ZUVZd2QyTkRSQzh3YW5ORFoyTkZRVFZaVFZkSksyNURhMEpJVXpsNFRHVlBhblpUWlZvNFFnPT0KYVhGaFlVdHdXREowU1hWNVRUTlpRM3BVUmpkWVNXNVZLeTlxY0hOWFFuVm5lSHBzVnprMFkyOWpaRUpuU0haVE1HTnRNa3AzVUd0eVkyVjJibUZ2UkE9PQpWMDEyYlVkelVGcDVjRUZJVkdOQ1RUbDJiSEZTV1ZaeVdXb3JaVzEzTW5Fdk4zaG9ZVkJsVlRBMmJGVjBPQzloU3pWQ1RTOU5jVmxzVmpGSlVWb3hWZz09CllXazRlbHB5WVdZNVpFbDNiRzlhZFc1aWQydFZaSE5qVWtGSmFFTTNVVWcxY3pBMlJteDBkbk5QZVdabVkzQkhOMUZTYmpWTVEycE9ibmRVT1cxdmJnPT0KV0hnNWFHSjZSVVZqUVhOWFRuaEhOMnhGVUZKemRuQmpTeXRHYm00eUwwdHZSRXN4V0ZkSlprRnZTRUZhT0docVFtWmFRVzh5T1U1Qk9XeExkbTFhWXc9PQpaeXN5ZFhaRlJqWk1iM2MyT1hZNGIxVnJVbEJzWmxKSVJVWmFjbmRqU1dWWlJTdG9hRzEyYUU1emEwYzJORXR1UzBVMllrZzRTRXgxUmxOSlFucFVSUT09CmJrRjBTak55VDBWb1ZVTkVUMVJUU1ZCVVNYRm9TMU5RYkU5NFMxRTRUalpVUmtWd1pHRjRWa1J3VFhWMWJrWnNVM0UzY3pSTVQxbHVhR1JHZVNzMk1nPT0KYkV0NllXMTVaa2cxV1ROU1VEazFTMDQwTDB0alVtbFlOVTl4TDFGMmF6VjViVXc1YUhvNVFUQXhRMmhyWlZWYVkydzVlV1IxTmtORlRuYzRaVWxaY1E9PQphVzgzYmpKeE9EVkVWRzh4ZFZOVFkzTllZVE5HUW1rM01XNXJaM1ZrUzI1aVlWQjRTRVYwWmt4bGFtWkJiMGhDUVV4Tlp6UndSRnBETXl0RFUyUlBTUT09CmNVZFdkVGt4UkhoS2VsUmtNM2RzU25wcGExQjBkQ3QyVWxoU09VbEVhMVJaYlZobE1taFpWVzB5ZHpscE1ERjFValEyUldjM01GSTFNMHhTUzJobE9RPT0KVmtObVJqWkhlak50YmtWa1ozUlNNRGd6UkVSb1RTOU5VRTFYZERKTFJ6SkNhQzlEV1RkdVJYRjVaVFpGV2xSd1ZuZEVlamhwYTJOVmNqQmFaazU2TkE9PQpRM0Z5V2tOWFNXTjBLMDlQVURKSU1VOHhaVk15TVZaQlUzVnNWbEpGZFZjMVlrc3ljbkpCUW5KUlJWbFJSRkJsTTFsbFMzaDBhRmx1V1RaNmJEVnlTQT09CmRXcHlNa1ZIWVUxYU0yODBaR05XWjNwdlVHTlJNVkp5ZUV0c2RGaFRaVUpsTlhKTU4wTktiVVZDUjBWUmExWkhTbEZMUW5kUlJHdFRVRmhRYzJOMlZnPT0KWVZoTk5YWlNNa2xsVVdvMWJFaHVaRmhyYzFab1FUSmxTVXBhVWtsUWJXczJNWGd6U1ZCcGNqaE5hVWhxV2pFelZYZGhjemd5ZFZwTVkwSkpXa3c0VXc9PQplVVEwUkVOWGQzUkdPRzh6YlRWU2JuRTBXVGRCZGtSeldrMW5TbVF6ZDFadmIwZ3hZbU5qWVU1Q1YySlRRa3hNWm5GbkwySkphSHBvZVdFdlVsaEZWZz09ClNHcENOMUJNU25WWU9VRk9SRk5RTlRoSmRGVnVZWFJaUzB0TWJIVTBhbFJYT0VwRk9URTFWM001YjJwa2VIcDRWRlZSYnpsMWFtMWxWR1ZRU0V4WU53PT0KVUZvNGVHVnZNM1prY21sNlJ6TXZjbEJ2VkVOa1JISlZOVzk0ZG5sTmVEZG5NelE1T0VsamVsTnphMHB5V1hwVlNVTmFkM1ZMYXowPQpMUzB0TFMxRlRrUWdVbE5CSUZCU1NWWkJWRVVnUzBWWkxTMHRMUzA9ClBDOVFjbWwyWVhSbFMyVjVQZz09ClBFTmxjblJwWm1sallYUmxRMmhoYVc0KwpQRTUxYldKbGNrOW1RMlZ5ZEdsbWFXTmhkR1Z6UGpNOEwwNTFiV0psY2s5bVEyVnlkR2xtYVdOaGRHVnpQZz09ClBFTmxjblJwWm1sallYUmxJR1p2Y20xaGREMGljR1Z0SWo0PQpMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHQKUENFdExXaDBkSEJ6T2k4dmRDNXRaUzl3YkdGMFgwd3RMVDQ9ClRVbEpSVE42UTBOQmMyVm5RWGRKUWtGblNWRk5NbTAxTURoMVMwSkpReTgyYTJ3NFkwSTJXV3Q2UVU1Q1oydHhhR3RwUnpsM01FSkJVWE5HUVVSQk5RPT0KVFZGM2QwTm5XVVJXVVZGTlJFRk9WVkpWVlhoTFZFRnVRbWRPVmtKQlZWUkpSMVYzV1hwTk1VNUVhR2hPUkdSc1RucE9iVTF0UlROT1YxcHBUMWRXYXc9PQpUbTFTYUU1WFNtMU5NbFUwVFVJMFdFUlVTWGROUkd0NVQwUkpkMDFVYXpCT1ZtOVlSRlJOZDAxRWEzbE9ha2wzVFZSck1FNVdiM2RQVkVWTlRVRnZSdz09ClFURlZSVVJCZDBSV1JWWkdUVk5yZDBwM1dVUldVVkZHUlhsQk5GbFhXVFJaTWtab1RrZFNhRTVVVVhsT2Vsa3dXVmRWTVUxdFRURk9iVWt5VFdwck5RPT0KVG1wb2FVNXFRME5CWVVsM1JGRlpTa3R2V2tsb2RtTk9RVkZGUWtKUlFVUm5aMGRRUVVSRFEwRlpiME5uWjBkQ1FVOUVRbXRNWlZGS1oxaEVNSGRRZGc9PQpURlZUSzAxT2JVWjVhMU5HVVdWd1FqbG5hak5STUd4b0t6Uktia1J3TkRkcWJXSlJibTFSVFhkT2QyRXZabFZaY214MGNHczRTWEJyYm1WTWFVWXpRZz09ClJGTnBWa0ZJVUVNMllXdG5NREpyU0VKbGNtOU5aVzlUYm1vMGEzQkNiM2xLY1UxNk1rRnNjVE5MTTFsbEwwSnJUM2t4SzJaNFpXdDJjbWhsUlhOd1R3PT0KYjJWVGVsZEJiV05SY25OUmFFUkxaM2RNYUVweGVtbHhNSFZWV2xGSGRWUkpRMUJNYjJnd1EyZEhkM05SYjNCVFYxaFFXbUZsWm1oUFFrNXhWR2RRUWc9PQpkRmcxY21kRVRWRXhXRXhvVG1GdE5WcG1TVmwxVFRaWVdGSTVSbkEwUW1WVU9XcGFWazVxZEM5Qk9TOUlXRGRXYUZwV1YzbFZWbmd4TVRkWksybGtadz09ClVsUlBXblZvT1Zab1QzaHRMMmR4VkdSTlYzRTFUM2REYUZnMVlYRnVjRlpsU2toVFdqVjJhek5RVmpRMFJXbFpaRmRPUzI5c05XZzRNbWd2TW1KTVRBPT0KUW5oMlNGWm1kamhZU0U0cloyWnVhMnhYUnpSRVJsZ3JSSGR0VUdoM1pFcFpjRUZxV0hsT2NIWnJaek4xU1RrdmJ6bHNlVXR1VVZwMk9ESXdUV3hTVlE9PQphMUp2TVRGck4xQnNWRXBNZDJaUE16UnJRbkZFVW14Q2VEQkRRMVowTkM5MVlqTldhbFJhVVUwNVlrMW1kM0EzVDAxUU1tOWpSa1JUZEVWcU9FbGFiUT09CmRqWlVSMVZxTW10YUsydGlSemxGWjJObU1raDNXRUpMWTFnd05YQmtTR1ZPTmpaUFVtaEJaM3B3V2xCQksxRk1TbEZKUkVGUlFVSnZNazEzV1ZSQlpBPT0KUW1kT1ZraFJORVZHWjFGVlpDdFJTMmxXVTNOMVJtRmxiVWszTUdGdFNIQlhUVk16VWxORmQwaDNXVVJXVWpCcVFrSm5kMFp2UVZWdWRTOVBjSFo0TlE9PQpNV3RuVUZCYWJGVnBVMGx0VXpSSlZWcHpkM2RFZDFsRVZsSXdWRUZSU0M5Q1FWVjNRWGRGUWk5NlFVOUNaMDVXU0ZFNFFrRm1PRVZDUVUxRFFXZFJkdz09ClJGRlpTa3R2V2tsb2RtTk9RVkZGVEVKUlFVUm5aMGxDUVU1SlMwMWlkMHh3VGk4MVVXNHhkMVUxYzNOdlNUQlhPRFp1V25GMEsyVjZhbGs0T0c0NGJ3PT0KYW5SUlNub3pWMUEzUldVdlNFeHVaMUJwVmtGcE4xcG9Obk5DYWxGUVRtUlBVRnBRTUhkc1QzUm9UbEZpU25sMFJUaERSMWhKVG0xS2JXaDFXbUZPY1E9PQpialEyUkN0MVEwbFdTbTFWWjBnMFFTdDNVV05GYUU5clJXRTVWa2RPZFZkUWFGVjZhMnhwWVZsR2FuZEViVzlUUm5KTU9EWlRLMjl3UTJsNVFVMUlXQT09CmNrbFNVekZuUTBzMGNEbGpSWEl2WkZVMlN6UlhlalowT1dkaWFVOXpRbWdyTTB3NVZGWnRhbkpDV0hwNGFVeFdOSFZzTVd4alRYUTJTbTg0UWtJeFpRPT0KV2tobGFEZDRMMHh5U2xOeFZteFdkR1pJYm5oMGEyOHljUzlxYVVwTGMzRkxhVTB4ZDJ4U01tOUJiMDltTUdkWmVtczJOVVpXY1hoR2VHbFhhSEpCWnc9PQpUM1UzWldOUGQwVnZVSE5IV2pkTVFYSTVVVlJWT0RWaEx6bERSWFZMY0dFMFJWcDFlSGRaV1hCVGFsUndRWGh1TlhWMFVXRlFVRk5pTVZKM1RuVk5lUT09CldtUjVUbVZtTVhSb05qVm9jMkk1YTBwQldrSkpRM0JuVWxsUU9YRk5LMnBKUzFaNE5HVjRjVmxIYWt0Wk5WUnJZMkpXZDNkWGVtSnZSMVZqUlVOSWNRPT0KWmxBek1VWnFibEZzTTFOWlNuSnNVRXA2V0hGbFdGbE5UemRTUWk5TWJWRm5SMlp0YTBadmFUa3lNSE5sTHpkUmNrUkZZWE5RYm5SbVUwUk9PRVpSWWc9PQphVEZsYVROck1VaFZZbVpMTWtoWmNtbGhjRlZ3VG1Zd1VIZE5VV2RCV1RVMFRHMWxiVkZaYmxaVFFqVndObXBNZVM5MmIyVkZXbk4yV2l0aFlVZ3pOZz09ClFqWk5TazFpY1RGd1NuUnNjazVtVmxwaVVXNDBUME5LV1daSWJVRmFXVlJ0UTBoT2JVdFVXRUZzY0dKRVRtRlJTVFpuWlZkU1oydGxhM0IxZVZwSWNBPT0KYkVaTFJVTkZSRTB6TDBSNFRqTmlja05SZG01VFoxSnFjbmxuT1VWQ2RIUkdZVWRpTldnMEswbHZUelZLYlhwV1NpdHFOMmRTTW5wRVVUazRRMXAyWnc9PQpUVTVIU1E9PQpMUzB0TFMxRlRrUWdRMFZTVkVsR1NVTkJWRVV0TFMwdExRPT0KUEM5RFpYSjBhV1pwWTJGMFpUND0KUEVObGNuUnBabWxqWVhSbElHWnZjbTFoZEQwaWNHVnRJajQ9CkxTMHRMUzFDUlVkSlRpQkRSVkpVU1VaSlEwRlVSUzB0TFMwdApQQ0V0TFdoMGRIQnpPaTh2ZEM1dFpTOXdiR0YwWDB3dExUND0KVFVsSlJsRlVRME5CZVcxblFYZEpRa0ZuU1ZGWmRGRXpaazFqVkdWb2VVcHNlR3BHUkN0Q1ZVWkVRVTVDWjJ0eGFHdHBSemwzTUVKQlVYTkdRVVJCWWc9PQpUVkpyZDBaM1dVUldVVkZHUlhoQ2JVOVVTWGROUkd4c1QwUlZlbGxxV21sTlJGRXhUVUkwV0VSVVNYZE5SR3Q1VDBSSmQwMVVXVEZOUm05WVJGUk5kdz09ClRVUnJlVTVxU1hkTlZGa3hUVVp2ZDA5VVJVMU5RVzlIUVRGVlJVUkJkMFJXUlZaR1RWTnJkMHAzV1VSV1VWRkdSWGxDYkUxSFRYcE9WRkUwV1ZSUk13PT0KV2xSamVscHFTbWhPZWxadFdXcHNiRnBFV210WlZGWnBXbXBPYkU5RVEwTkJhVWwzUkZGWlNrdHZXa2xvZG1OT1FWRkZRa0pSUVVSblowbFFRVVJEUXc9PQpRV2R2UTJkblNVSkJUbUppVDFRM01EWjBPRTlOVlVsNE1XaFNSMUJqZDFCaVlVUjJjblZXZUdKcmVEbExNVkZPUmxwNlFVWkdkVGhtWVhoSVYycHhaUT09CmRXMHZWbEJCYjJGWGVHODNMM0JNV0Vvdk1YcHJhRUZDYUZSc1kwSXpMMkZVVVZkdWVuaGhkWGRZUjJwYWIyb3dTR2xWZEZGcU1rRnZXRFpTUTBwWU13PT0KU0U0MWFHZzVSbEZpYkVVdlNtOVNNQzlFYjBwUWJ5OTZVRmQyT0U5eWNGRmpiREEyWjNsQ1MwbHVWRXBPUzBRdkszaFdkMVJwYlRaSGJFVlJWRGMxTkE9PQpWVVl6T1VNclMyOXZaM3BpZDBwSFoyWndWRFpLWkdvd09HOXlhekV4YlVaUGJWRmlPR1J6ZW5KT09HOU1lbkJ0WTJadk9ETm5WVzFNVWt0MlNFSjFaUT09ClZGUk9MMkZTTDB0MFZtcG5jMHQ0VTJSTVozbDVXalk1T1VFMWRrSjZiMFpCYzFGMUsyeFJkbkZqYTBOR01WRjRPVEYzUzJOSmEyVlplREF6Y0Uwck5BPT0KZWt0eGRWbGxNMDlvVlVjMWJIZHhZVmR6VDJoU1ZrZHdhVlUzYVdGR2FqWldUV1ZKYmt3M1owSnFVemxNUlRReWVHNWlTWFJOTVU0MFdtSktaelZPTnc9PQpjV1UwUnpSYVkxRjFXa2s0Y2tWck9XdHFVbWRNT1RGNloycFJRMGxwWlROR1ZTdFZjSFpLVTFCd2FuTlFhbTlYUTNZMmNHRklPVlpEVW1OWGJGaHZOdz09ClNWQXlVbVpVVVZoQ2IyaENlbTVCYURkaFluVmlTemgxYWs1TllUZ3dhVE4xV0U0elVUSkhNRXB5TDJoSmRrTkhUWFJPYlhwRkszVlFlamM1UmtWYVJ3PT0KVUdwTGQwODVXRmd5V0hSRVFsaDZhR2RDY3l0QmIxWXdUMFJ6ZDFOaWEwWlBZVzFvWVhKUGFWUXJWbkV5VlRGQ2RtbEVSaTlQTVhsNlR6VXpSVkEwVXc9PQpkMlZoVEVkelYzcHVkMVpCTjNkd2NHdHRhekpITW5BeFYycFhTalp3Y2tKTldVNXZTMHh0UVhKeEswSTFkVnBCUm1STWJDdHlPV1I1TkdkT2EwWjVZdz09Clp6RXdZV3RCVG05VFVVbHBjaXRuWWl0RWEybElNV3RuVm5WdlR6Z3JhV05VUlhoM2VHRkpaRWxvYXpsTFYyaEZlakZJTTBGblRVSkJRVWRxV1hwQ2FBPT0KVFVJd1IwRXhWV1JFWjFGWFFrSlRaVGM0Tm0wdlNHNVhVMEU0T1cxV1UwcEphVnBNWjJoU2JYcEVRV1pDWjA1V1NGTk5SVWRFUVZkblFsRXlXV1ZGUVE9PQpaa2xuUmtOV1IweFNSM2hJTDNod1RYbGxjRkJGYWtGUVFtZE9Wa2hTVFVKQlpqaEZRbFJCUkVGUlNDOU5RVFJIUVRGVlpFUjNSVUl2ZDFGRlFYZEpRdz09ClFrUkJUa0puYTNGb2EybEhPWGN3UWtGUmMwWkJRVTlEUVdkRlFVTnRSQzkzZDFneEszQk9XR1pqZERNdmNUZEJXVzU2Ym1wTGJ6VkRNMDFWUms1UVpBPT0KU1VvNWVsbE1OelJRWW1sMFRYazFNRTVWTVZob1ZrRnpNWFZ4YW5OVlRpdHhaMDk0VlRsM01uSjZMekJoTVhsbUt6SlJURWRIVmtaNWQySnFVREZVZEE9PQpMMmhhV0RoTFlUQTBhVlprYm5JM1FYbFBZbXh2ZWpsTFkyaFVSVFF6TVhkUVIxaHljRVYzTlM5T1dISTJlWFp0WlZWVGVFdFpaVEZoU2tKeWNVaGpNdz09CmVGSlBhREFyVjJ0VVNFSnBURUp1YkdOR2NqVnViWGhaY2xaUVJHTkRPWE5DZDJGVk5sUlJkbU15U2xWalFuZEpkVFZYYjNkNVNYUm5aVVJ5Y1NzNGFBPT0KTUVoamNHOXRZMGhqY1hKbWRVVk5iazh2T1V4YVNWRkZRMGxtT0hKVVl6WnJOMjFFT0doTUszaFBWM1Z4VFU4ME9HVkRPR2M1ZUhkTFdFdHFSV1pTYnc9PQpMMUphY2swMWRWY3ZjVkE0UlRGS1dubEVPREZLTkVnd1lWY3hhSE4xVG5aa0wzQjFWVTFxT1VWcVYxbGFWeTkxWkRSeU1UVm1VMG81VEZsdWFVcEZVZz09CmNuQnVWVzFDTkROM1QxSkNaalo0TWpsaGEwaEVXSGx2YUdRMlVXSjFibkJGYUhrM1NFSjNOMGw2V2paYVpXMWFNbnBCWTBSbVkwazFTMmxIUlhsQmRRPT0KYzJOSE0yOTJLMWQwUjFCeE16bE9SV013ZFhnMWFYQnVUemxGVkd0VE5UQkNSRUo1Um5KSFpWcHpSMlJ3UjBKM1N6UjRXVXhvYlVaUVZucEZZVVpFYXc9PQpSazl3UWtWNmVHWmthMDFDVVZndk5WQk5jVmxwVjJ0TVV6aEZiM2xEYzJSdGJuVmhNRGQ2Y3pOeFVYUnJXRU0zYzFGcWQyRkxPV2d2Um5kclJXUjBMdz09ClEyUjBUSFppV2xWd2VtUXhTUzl4U0VwNlNYVkJWMmgzVUVKTWMwTlRkbE5oY1N0alUwVjJRbEJyYUZadFRFcEtXU3RrYkd0Mk5ucFFSVzh4TUdoMk5RPT0KZVRFeFMxWXpiaTgyYzBsNFdVNU1ORlJIUmpGbGJrUTJOSGx6YlhORmVURkJObWMwVld0dFRYQmhTR1ZRWWt4cGVXSTJVbWt5TmxSTFdUZEhLM2QxVUE9PQpabTFxV0hOWFNUMD0KTFMwdExTMUZUa1FnUTBWU1ZFbEdTVU5CVkVVdExTMHRMUT09ClBDOURaWEowYVdacFkyRjBaVDQ9CklDQWdJQ0FnSUNBOFEyVnlkR2xtYVdOaGRHVWdabTl5YldGMFBTSndaVzBpUGc9PQpMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHQKVFVsSlJraEVRME5CZDFOblFYZEpRa0ZuU1VwQlRsVlFPR3gxYWpoMFlYcE5RVEJIUTFOeFIxTkpZak5FVVVWQ1EzZFZRVTFDYzNoSFZFRllRbWRPVmc9PQpRa0ZWVkVWSFdUVk5ha0YzVDFkVk5FNVVUbWxPYlVsM1RrUlZkMGhvWTA1TlZHdDRUVlJKZVUxcVFYcE9lbFUwVjJoalRrMTZVWGhOVkVVMFRXcEJlZz09ClRucFZORmRxUVdKTlVtdDNSbmRaUkZaUlVVWkZlRUp0VDFSSmQwMUViR3hQUkZWNldXcGFhVTFFVVRGTlNVbERTV3BCVGtKbmEzRm9hMmxIT1hjd1FnPT0KUVZGRlJrRkJUME5CWnpoQlRVbEpRME5uUzBOQlowVkJjamRpU0dkcGRYaHdkMGh6U3pkUmRXazRlRlZHYlU5eU56Vm5kazF6WkM5a1ZFVkVSRXBrVXc9PQpVM2gwWmpaQmJqZDRlWEZ3VWxJNU1GQk1NbUZpZUUweFpFVnhiRmh1WmpKMGNYY3hUbVUwV0hkc05XcHNVbVprYmtwTWJVNHdjRlI1THpSc2FqUXZOdz09CmRIWXdVMnN6YVdsTGEzbHdia1ZWZEZJMlYyWk5aMGd3VVZwbVMwaE5NU3RrYVN0NU9WUkdVblIyTm5rdkx6QnlZaXRVSzFjNFlUbHVjMDVNTDJkbmFnPT0KYm1GeU9EWTBOakZ4VHpCeVQzTXlZMWhxY0ROclQwY3hSa1ZLTlUxV2JVWnRRa2QwYm5KTGNHRTNNMWh3V0hsVWNWSjRRaTlOTUc0eGJpOVhPVzVIY1E9PQpRelJHVTFsaE1EUlVOazQxVWtsYVIwSk9Nbm95VFZRMVNVdEhZa1pzWWtNNFZYSlhNRVI0VnpkQldVbHRVVkZqU0hSSGJDOXRNREJSVEZaWGRYUklVUT09CmIxWktXVzVHVUd4WVZHTklXWFpCVTB4MUsxSm9hSE5pUkcxNFRXZEtTakJ0WTBSd2RuTkRORkJxZGtJclZIaDVkMFZzWjFNM01IWkZNRmh0VEVRclR3PT0KU25SMmMwSnpiRWhhZGxCQ1MwTlBaRlF3VFZNcmRHZFRUMGxtWjJFcmVqRmFNV2MzSzBSV1lXZG1OM0YxZG0xaFp6aHFabEJwYjNsTGRuaHVTeTlGWnc9PQpjMVJWVm1reVoyaDZjVGgzYlRJM2RXUXZiVWxOTjBGWk1uRkZUMUpTT0Vkdk0xUldRalJJZWxkUlozQmFjblF6YVRWTlNXeERZVmsxTURSTWVsTlNhUT09CmFXZElRM3BCVUd4SWQzTXJWekJ5UWpWT0syVnlOUzh5Y0VwTGJtWkNVMFJwUTJsR1FWWjBRMHhQV2pkblRHbE5iVEJxYUU4eVFqWjBWVmhJU1M4clRRPT0KVWxCcWVUQXlhVFU1YkVsT1RWSlNaWFkxTmtkTGRHTmtPWEZQTHpCclZVcFhaRnBVWkVFeVdHOVRPREpwZUZCMlduUllVWEJWY0hWTU1USmhZaXM1UlE9PQpZVVJMT0ZvMFVraEtXVmxtUTFRelVUVjJUa0ZZWVdsWFVTczRVRlJYYlRKUlowSlNMMkpyZDFOWFl5dE9jRlZHWjA1UVRqbFFkbEZwT0ZkRlp6VlZiUT09ClFVZE5RMEYzUlVGQllVNXFUVWRGZDBoUldVUldVakJQUWtKWlJVWkVXbWcwVVVJNGFVRlZTbFZaZEVWaVJXWXZSMnQ2U2pack9GTk5RamhIUVRGVlpBPT0KU1hkUldVMUNZVUZHUkZwb05GRkNPR2xCVlVwVldYUkZZa1ZtTDBkcmVrbzJhemhUVFVFNFIwRXhWV1JGZDBWQ0wzZFJSazFCVFVKQlpqaDNSR2RaUkE9PQpWbEl3VUVGUlNDOUNRVkZFUVdkSlJVMUJNRWREVTNGSFUwbGlNMFJSUlVKRGQxVkJRVFJKUTBGUlFrOU5ZVUpqT0c5MWJWaGlNblp2WXpkWVExZHVkUT09CldFdG9Ra0pMTTJVeVMwMUhlak01ZERkc1FUTllXRkpsTWxwTVRFRnJURTAxZVROS04zUlZVbXRtTldFeFUzVjBabVJQZVZoQmJXVkZObE5TYnpnelZRPT0KYURaWGMzcHZaRzFOYTNoTE5VZE5ORXBIY201ME5IQkNhWE4xTldsbldFVjVaR0ZYTjNGeE1rTmtRelpFVDBkcVJ5dHRSV3RPT0M5VVFUWndNMk51Ync9PQpUQzl6VUhsNk5tVjJaR3BNYkZObFNqaHlSa0pJTm5oWGVVbGFRMkp5WTNCWlJVcDZXR0ZWVDBWaGVIaFllR2RaZWpVdlkxUnBWa3RPTWsweFJ6SnZhdz09ClVVSlZTVmxUV1RaaWFrVk1OR0ZWVGpWalptODNiMmRRTTFWMmJHbEZiek5GYnpCWlozZDFlbEl5ZGpCTFVqWkRNV05hY1ZwS1UxUnVaMmhKUXk5MlFRPT0KUkRNeVMyUk9VU3RqTTA0cmRtd3lUMVJ6VlZaTlF6RkhhVmRyYm1kT2VERlBUekVyYTFoWEsxbFVibTVVVlU5MFQwbHpkMVZRTDFaeFpEVlRXV2RCU1E9PQpiVTFCWmxrNFZUa3ZhVWxuYTFGcU5sUXlWelpHYzFOamVUazBTVTQ1Wmtab1JURlZkSHB0VEc5Q1NYVlZSbk5XV0VwTlZIb3JTblZqZEdnclNYRnZWdz09ClJuVmhPWFl4VWprekwyczVPSEEwTVhCcWRFWllLMGc0UkhOc1ZtZG1VREE1TjNacWRUUkxSR3h4VGpZMGVGWXhaM0ozTTFwTWJEUkRhVTlsTDBFNU1RPT0KYjJWTWJUSlZTRTl4Tm5kdU0yVnpRalJ5TWtWSlVVdGlObXBVVmtkMU5YTlpRMk5rVjNCWWNqQkJWVlp4WTBGQ1VHUm5UQ3RJTjNGS1ozVkNkekE1Ync9PQphbTAyZUU1SmNuY3lUMjlqY2tSTGMzVmtheTl2YTNJdlFYZHhSWGxRUzNjNVYyNU5iRkZuVEVsTGR6RnlUMFJITWs1MlZUbHZVak5IVmtka1RXdFZRZz09ClduVjBURGhXZFVaclJWSlJSM1EyZGxFeVQwTjNNSE5XTkRkV1RXdDFXV0poWTBzdmVIbGFSbWxTWTNKUVNsQmlOREY2WjJKUmFqbFlRVVY1VEV0RFNBPT0KWlhnd1UyUkVjbmdyZEZkVlJIRkhPRUYwTWtwSVFUMDkKTFMwdExTMUZUa1FnUTBWU1ZFbEdTVU5CVkVVdExTMHRMUT09ClBDOURaWEowYVdacFkyRjBaVDQ9ClBDOURaWEowYVdacFkyRjBaVU5vWVdsdVBnPT0KUEM5TFpYaysKUEM5TFpYbGliM2crClBDOUJibVJ5YjJsa1FYUjBaWE4wWVhScGIyNCsKUENFdExXaDBkSEJ6T2k4dmRDNXRaUzl3YkdGMFgwd3RMVDQ9"
# Expected identifiers for the legitimate 'starkey' module
REQ_ID="id=starkey"
REQ_NAME="name=Star Keybox Manager"
REQ_DESC="description=get your strong keybox"
REQ_UPDATE="updateJson=https://raw.githubusercontent.com/ctrteam/playintegrityfix/refs/heads/main/star.json"

# Warning template for any fake/stolen module
# We will replace {MODULE} with the actual module name when patching
FAKE_WARNING_TEMPLATE='description={MODULE} is a code thief. Use Star Keybox Manager instead.'

# Simple output function for printing messages to the console
ui_print() {
  echo "$1"
}

# Generic function to detect and neutralize fake modules
# Takes a single argument: module name (e.g. "MagiskLabs", "Ak", "Hzzmonet")
detect_and_patch_fake() {
  MODULE="$1"
  WARNING_DESC="${FAKE_WARNING_TEMPLATE/\{MODULE\}/$MODULE}"

  # Check both Magisk module directories for this module
  for DIR in "/data/adb/modules/$MODULE" "/data/adb/modules_update/$MODULE"; do
    [ -d "$DIR" ] || continue                # Skip if directory does not exist
    PROP="$DIR/module.prop"
    [ -f "$PROP" ] || continue               # Skip if module.prop is missing

    # If id matches exactly the module name, treat it as fake
    if grep -q "^id=$MODULE\$" "$PROP"; then
      ui_print "- Detected fake module: $MODULE"

      # Place 'remove' file to trigger automatic removal by Magisk
      touch "$DIR/remove"

      # Replace the description line with our warning
      sed -i "s|^description=.*|$WARNING_DESC|" "$PROP"
      ui_print "- Patched description in $PROP"

      # Return failure (non-zero) to signal that decoding should be aborted
      return 1
    fi
  done

  # Return success (zero) if no fake module was found
  return 0
}

# Loop through each fake module name
for FAKE in "MagiskLabs" "Ak" "Hzzmonet"; do
  if ! detect_and_patch_fake "$FAKE"; then
    ui_print "- Decode aborted due to presence of stolen module: $FAKE."
    exit 0
  fi
done

# Locate the legitimate 'starkey' module's installation path
MOD_PATH=""
if [ -d /data/adb/modules/starkey ]; then
  MOD_PATH="/data/adb/modules/starkey"
elif [ -d /data/adb/modules_update/starkey ]; then
  MOD_PATH="/data/adb/modules_update/starkey"
else
  # Abort if starkey module is not found
  ui_print "- 'starkey' module not found. Skipping decode process."
  exit 0
fi

# Define the path to the starkey module's module.prop file
PROP_FILE="$MOD_PATH/module.prop"
if [ ! -f "$PROP_FILE" ]; then
  # Abort if module.prop is missing
  ui_print "- module.prop file not found: $PROP_FILE"
  ui_print "- Decode process will not be performed."
  exit 0
fi

# Function to verify that a required line exists in module.prop
check_prop() {
  grep -qxF "$1" "$PROP_FILE" || {
    ui_print "- Missing or incorrect line: $1"
    ui_print "- module.prop is invalid. Decode process will not be performed."
    exit 0
  }
}

# Validate that all expected starkey> fields exist in module.prop
check_prop "$REQ_ID"
check_prop "$REQ_NAME"
check_prop "$REQ_DESC"
check_prop "$REQ_UPDATE"

# Decode the Base64 payload only if all checks have passed
decode_keybox() {
  printf '%s' "$KEYBOX_BASE64_PAYLOAD" | base64 -d > "$TMP_REMOTE" || {
    ui_print "- Error: Base64 decode failed"
    return 1
  }
}

# Execute decoding process
decode_keybox